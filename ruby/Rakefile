require 'rbconfig'
require 'rake/testtask'
require 'rake/clean'
require 'bundler/gem_helper'

name = 'bool'

native_lib_win     = "lib/#{name}_ext.so"
native_lib_jar     = "lib/#{name}_ext.jar"
native_lib_jar_mvn = "../java/target/#{name}.jar"
CLEAN << native_lib_win
CLEAN << native_lib_jar
CLEAN << 'tmp'

spec = Gem::Specification.load("#{name}.gemspec")

if RUBY_PLATFORM =~ /java/
  file native_lib_jar => native_lib_jar_mvn do
    cp native_lib_jar_mvn, native_lib_jar
  end

  file native_lib_jar_mvn => Dir['../java/src/main/**/*.{java,rl,y}'] do
    Dir.chdir('../java') do
      sh 'mvn package'
    end
  end

  task :test => native_lib_jar
else
  supported_ruby_versions = %w[1.9.3 2.0.0]
  patch_or_rc = RbConfig::CONFIG["PATCHLEVEL"] =~ /^-/ ? RbConfig::CONFIG["prefix"].split('-')[-1] : "p#{RbConfig::CONFIG["PATCHLEVEL"]}"
  ruby_version_with_patch_or_rc = "#{RUBY_VERSION}-#{patch_or_rc}"

  if !supported_ruby_versions.index(RUBY_VERSION)
    STDERR.print "\e[31m"
    STDERR.puts "You'll need Ruby 1.9.3 or 2.0.0. You have ruby #{ruby_version_with_patch_or_rc}. Read #{File.expand_path('../README.md', __FILE__)}."
    STDERR.print "\e[0m"
    exit 1
  end

  task :clean do
    Dir.chdir('../c') do
      sh 'make clean'
    end
  end
  mingv_bin = File.expand_path('../../mingw/bin', __FILE__)
  ENV['PATH'] = "#{mingv_bin}:#{ENV['PATH']}"

  %w[ast.h ast.c lexer.h lexer.c parser.h parser.c unused.h].each do |f|
    gen  = "../c/#{f}"
    copy = "ext/#{name}_ext/#{f}"

    file copy => gen do
      cp gen, copy
    end

    task :compile => copy
    task :cross => copy

    CLEAN << copy

    if f =~ /(lexer|parser)/
      file gen => ["../c/lexer.rl", "../c/parser.y"] do
        Dir.chdir('../c') do
          sh "make #{f}"
        end
      end
    end
  end

  task :test => :compile

  if ARGV.index('cross')
    cross_ruby = "#{ENV['HOME']}/.rake-compiler/ruby/ruby-#{ruby_version_with_patch_or_rc}"
    # Ideally we'd just define task :compile => :install_cross_ruby but the 
    # :cross task fails if the ruby doesn't exist when the task is defined.
    if !File.directory?(cross_ruby)
      sh "bundle exec rake-compiler cross-ruby VERSION=#{ruby_version_with_patch_or_rc}"
    end

    tmp_dir = "tmp/x86-mingw32/#{name}_ext/#{RUBY_VERSION}/win32"
    mkdir_p(tmp_dir)
    cp 'resolv.rb', tmp_dir
  end

  begin
    require 'rake/extensiontask'
  rescue LoadError
    STDERR.print "\e[31m"
    STDERR.puts "You have to bundle. Read #{File.expand_path('../README.md', __FILE__)}."
    STDERR.print "\e[0m"
    exit 1
  end
  # defines :compile task
  Rake::ExtensionTask.new("#{name}_ext", spec) do |ext|
    ext.cross_compile = true
    ext.cross_platform = 'x86-mingw32'
  end
end

# defines :test task
Rake::TestTask.new do |t|
  t.pattern = "spec/*_spec.rb"
end

task :default => :test

Bundler::GemHelper.install_tasks

